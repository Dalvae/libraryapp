
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: -p ${POSTGRES_PORT}
  auth-service:
    build: ./auth-service
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    environment:
      - PORT=${AUTH_SERVICE_PORT}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=postgres  
      - DB_PORT=${POSTGRES_PORT}
      - DB_NAME=${POSTGRES_DB}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
    volumes:
      - ./auth-service:/app
      - /app/node_modules

  inventory-service:
    build: ./inventory-service
    ports:  
      - "${INVENTORY_SERVICE_PORT}:${INVENTORY_SERVICE_PORT}"
    environment:
      - PORT=${INVENTORY_SERVICE_PORT}
      - DB_HOST=postgres
      - DB_PORT=${POSTGRES_PORT}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
      - auth-service
    volumes:
      - ./inventory-service:/app
      - /app/node_modules

  frontend:
    build: ./front-end
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      - auth-service
      - inventory-service
    volumes:
      - ./front-end:/app
      - /app/node_modules
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT}
      - VITE_AUTH_SERVICE_PORT={AUTH_SERVICE_PORT}
      - VITE_INVENTORY_SERVICE_PORT=${INVENTORY_SERVICE_PORT}
      - AUTH_SERVICE_URL=http://auth-service:${AUTH_SERVICE_PORT}
      - INVENTORY_SERVICE_URL=http://inventory-service:${INVENTORY_SERVICE_PORT}
      - ENABLE_API_MOCKING=${ENABLE_API_MOCKING}

volumes:
  postgres_data:
